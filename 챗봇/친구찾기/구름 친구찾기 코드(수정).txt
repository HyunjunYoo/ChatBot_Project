from flask import Flask, request, jsonify
import random
import MySQLdb

gender = None
age_group = None

application = Flask(__name__)

conn = MySQLdb.connect(host="localhost", port=3306, db='friendly', user='root', password='12345')

# ÏÑ±Î≥Ñ ÏÑ†ÌÉù
@application.route('/step1_friend', methods=['POST'])
def step1_friend():
    response = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "textCard": {
                        "title": "ÏπúÍµ¨Î•º Ï∞æÏïÑÎ≥ºÍπåÏöî?",
                        "description": "Ïñ¥Îñ§ ÏπúÍµ¨Î•º Ï∞æÏïÑÎ≥ºÍπåÏöî?. \n ÏÑ±Î≥ÑÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî!",
                        "buttons": [
                            {
                                "action": "message",
                                "label": "Ïó¨Ïûê",
                                "messageText": "Ïó¨Ïûê"
                            },
                            {
                                "action": "message",
                                "label": "ÎÇ®Ïûê",
                                "messageText": "ÎÇ®Ïûê"
                            },
                        ]
                    }
                }
            ]
        }
    }
    return jsonify(response)

# ÎÇòÏù¥ÎåÄ ÏÑ†ÌÉù
@application.route('/step2_friend', methods=['POST'])
def step2_friend():
    global gender
    body = request.get_json()
    gender = body['userRequest']['utterance']  # ÏÑ±Î≥Ñ ÏÑ†ÌÉùÎêú Í∞í

    response = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "carousel": {
                        "type": "textCard",
                        "items": [
                            {
                                "title": "ÏπúÍµ¨Î•º Ï∞æÏïÑÎ≥ºÍπåÏöî?üíó",
                                "description": "Ïñ¥Îñ§ ÏπúÍµ¨Î•º Ï∞æÏïÑÎ≥ºÍπåÏöî?. \n ÎÇòÏù¥Î•º ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî!",
                                "buttons": [
                                    {
                                        "action": "message",
                                        "label": "10ÎåÄ",
                                        "messageText": "10ÎåÄ"
                                    },
                                    {
                                        "action": "message",
                                        "label": "20ÎåÄ",
                                        "messageText": "20ÎåÄ"
                                    },
                                    {
                                        "action": "message",
                                        "label": "30ÎåÄ",
                                        "messageText": "30ÎåÄ"
                                    }
                                ]
                            },
                            {
                                "title": "ÏπúÍµ¨Î•º Ï∞æÏïÑÎ≥ºÍπåÏöî?üíó",
                                "description": "Ïñ¥Îñ§ ÏπúÍµ¨Î•º Ï∞æÏïÑÎ≥ºÍπåÏöî?. \n ÎÇòÏù¥Î•º ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî!",
                                "buttons": [
                                    {
                                        "action": "message",
                                        "label": "40ÎåÄ",
                                        "messageText": "40ÎåÄ"
                                    },
                                    {
                                        "action": "message",
                                        "label": "50ÎåÄ",
                                        "messageText": "50ÎåÄ"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        }
    }
    return jsonify(response)

# ÏπúÍµ¨ Ï∂îÏ≤ú Í∏∞Îä•
def get_recommended_friends():
    global gender, age_group, conn
    body = request.get_json()
    age_group = body['userRequest']['utterance'].strip()  # ÎÇòÏù¥ ÏÑ†ÌÉùÎêú Í∞í

    cursor = conn.cursor()

    age_group_query = {
        '10ÎåÄ': 'age >= 10 AND age < 20',
        '20ÎåÄ': 'age >= 20 AND age < 30',
        '30ÎåÄ': 'age >= 30 AND age < 40',
        '40ÎåÄ': 'age >= 40 AND age < 50',
        '50ÎåÄ': 'age >= 50 AND age < 60'
    }.get(age_group, 'age >= 0')

    gender_query = 'F' if gender == 'Ïó¨Ïûê' else 'M'
    
    sql = "SELECT name FROM customer WHERE gender = %s AND " + age_group_query
    cursor.execute(sql, (gender_query,))
    suppliers = cursor.fetchall()

    result = [supplier[0] for supplier in suppliers][:6]
    recommended_friends = random.sample(result, len(result))

    friend_details = {}
    for name in recommended_friends:
        # Get games and age
        cursor.execute("SELECT game_name, age FROM customer WHERE name = %s", (name,))
        data = cursor.fetchone()
        if data:
            game_name, age = data
            friend_details[name] = {'games': game_name, 'age': age}

    cursor.close()
    return recommended_friends, friend_details

@application.route('/step3_friend', methods=['POST'])
def step3_friend():
    recommended_friends, friend_details = get_recommended_friends()
    return jsonify(recommended_friends, friend_details)

@application.route('/step4_friend', methods=['POST'])
def step4_friend():
    recommended_friends, friend_details = get_recommended_friends()

    items = []
    for friend in recommended_friends[:3]:
        details = friend_details[friend]
        items.append({
            "title": f"ÎãâÎÑ§ÏûÑ: {friend}",
            "description": f"# {details['games']} #{details['age']}ÏÇ¥ #{gender}",
            "imageUrl": "https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdAqmkb%2FbtsHBpCK2sR%2F5f2REVwRSQkiJ3qWkAcZkK%2Fimg.png",
            "link": {
                "web": "https://www.naver.com"
            }
        })

    responseBody = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "listCard": {
                        "header": {
                            "title": "ÏπúÍµ¨Î•º Ï∂îÏ≤úÌï¥Ï§ÑÍ≤å"
                        },
                        "items": items
                    }
                }
            ]
        }
    }
    return jsonify(responseBody)

if __name__ == "__main__":
    application.run(host='0.0.0.0', port=80)