# 문의 및 신고하기 기능_유준

# mysqlclient 설치하여 MySQLdb 호출
import pymysql
import random

# flask에 있는 request와 Bluepoint 호출
from flask import Blueprint, request, Flask, jsonify

# MySQL 객체 등록
conn = pymysql.connect(
    host="52.78.100.77",
    port=54201,
    db='friendly',
    user='root',
    password='12345',
    charset='utf8mb4',
    cursorclass=pymysql.cursors.DictCursor
)

step1_ask1 = None
step1_ask2 = None
step1_ask3 = None
step2_report1 = None
step2_report2 = None
step2_report3 = None
step3_all = None

# 블루프린트 객체 등록
bp = Blueprint('pltoo_complaint', __name__, url_prefix='/')

@bp.route('/step1_complaint_ask1', methods=['POST'])
def step1_complaint_ask1():
    body = request.get_json()

    responseBody = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "simpleText": {
                        "text": "문의사항을 선택해주세요."
                    }
                }
            ],
            "quickReplies": [
                {
                    "action": "message",
                    "label": "고객 서비스 및 기술 지원",
                    "messageText": "고객 서비스 및 기술 지원"
                },
                {
                    "action": "message",
                    "label": "회원 및 비회원 관련 사항",
                    "messageText": "회원 및 비회원 관련 사항"
                },
                {
                    "action": "message",
                    "label": "구매 및 환불 정책",
                    "messageText": "구매 및 환불 정책"
                }
            ]
        }
    }

    return jsonify(responseBody)

# ----------------------------------------------------------------------------------------------------
# 문의 및 신고하기 기능_step2_유준
@bp.route('/step2_complaint_ask2', methods=['POST'])
def step1_complaint_ask2():
    global step1_ask1
    body = request.get_json()

    step1_ask1 = body['userRequest']['utterance']
    print(f'step1_ask1 : {step1_ask1}')

    responseBody = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "listCard": {
                        "header": {
                            "title": "고객 서비스 및 기술 지원"
                        },
                        "items": [
                            {
                                "title": "고객 서비스와 연락하는 방법을 알려주세요.",
                                "description": "최대한 빨리 연락드릴게요!",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            },
                            {
                                "title": "사이트 이용 중 기술적 문제가 발생했을 때 어떻게 해야 하나요?",
                                "description": "사이트 이용 중 기술적 문제가 발생했을 때 어떻게 해야 하나요?",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            },
                            {
                                "title": "기술 지원을 받을 수 있는 방법을 알려주세요.",
                                "description": "기술 지원을 받을 수 있는 방법을 알려주세요.",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            }
                        ]
                    }
                }
            ],
            "quickReplies": [
              {
                "messageText": "처음으로",
                "action": "message",
                "label": "처음으로"
              },
              {
                "messageText": "다시 문의하기",
                "action": "message",
                "label": "다시 문의하기"
              }
            ]
        }
    }

    return jsonify(responseBody)

# ----------------------------------------------------------------------------------------------------
# 문의 및 신고하기 기능_step3_유준
@bp.route('/step3_complaint_ask3', methods=['POST'])
def step1_complaint_ask3():
    global step1_ask2
    body = request.get_json()

    step1_ask2 = body['userRequest']['utterance']
    print(f'step1_ask2 : {step1_ask2}')

    responseBody = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "listCard": {
                        "header": {
                            "title": "회원 및 비회원 관련 사항"
                        },
                        "items": [
                            {
                                "title": "비회원으로도 구매가 가능한가요?",
                                "description": "비회원 구매",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            },
                            {
                                "title": "회원 가입 절차에 대해 궁금한 점이 있습니다!",
                                "description": "회원 가입 절차",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            }
                        ]
                    }
                }
            ],
            "quickReplies": [
              {
                "messageText": "처음으로",
                "action": "message",
                "label": "처음으로"
              },
              {
                "messageText": "다시 문의하기",
                "action": "message",
                "label": "다시 문의하기"
              }
            ]
        }
    }



    return jsonify(responseBody)

# ----------------------------------------------------------------------------------------------------
# 문의 및 신고하기 기능_step4_유준
@bp.route('/step4_complaint_ask4', methods=['POST'])
def step1_complaint_ask4():
    global step1_ask3
    body = request.get_json()

    step1_ask3 = body['userRequest']['utterance']
    print(f'step1_ask3 : {step1_ask3}')

    responseBody = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "listCard": {
                        "header": {
                            "title": "구매 및 환불 정책"
                        },
                        "items": [
                            {
                                "title": "개인 정보 보호 정책에 대해 설명해 주세요.",
                                "description": "개인 정보 보호 정책",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            },
                            {
                                "title": "환불 절차에 대해 알고 싶습니다!",
                                "description": "환불 절차",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            }
                        ]
                    }
                }
            ],
            "quickReplies": [
              {
                "messageText": "처음으로",
                "action": "message",
                "label": "처음으로"
              },
              {
                "messageText": "다시 문의하기",
                "action": "message",
                "label": "다시 문의하기"
              }
            ]
        }
    }



    return jsonify(responseBody)

# ----------------------------------------------------------------------------------------------------
# 문의 및 신고하기 기능_step5_유준
@bp.route('/step5_complaint_report1', methods=['POST'])
def step1_complaint_report1():
    body = request.get_json()

    step2_report1 = body['userRequest']['utterance']
    print(f'step2_report1 : {step2_report1}')

    responseBody = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "simpleText": {
                        "text": "신고사항을 선택해주세요."
                    }
                }
            ],
            "quickReplies": [
                {
                    "action": "message",
                    "label": "보안 및 개인 정보 관련",
                    "messageText": "보안 및 개인 정보 관련"
                },
                {
                    "action": "message",
                    "label": "고객 서비스 관련",
                    "messageText": "고객 서비스 관련"
                },
                {
                    "action": "message",
                    "label": "기술 및 기능 관련",
                    "messageText": "기술 및 기능 관련"
                }
            ]
        }
    }


    return jsonify(responseBody)

# ----------------------------------------------------------------------------------------------------
# 문의 및 신고하기 기능_step6_유준
@bp.route('/step6_complaint_report2', methods=['POST'])
def step1_complaint_report2():
    global step2_report1
    body = request.get_json()

    step2_report2 = body['userRequest']['utterance']
    print(f'step2_report2 : {step2_report2}')

    responseBody = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "listCard": {
                        "header": {
                            "title": "보안 및 개인 정보 관련"
                        },
                        "items": [
                            {
                                "title": "부적절한 사용자 댓글이나 게시물이 있습니다.",
                                "description": "부적절한 사용자 댓글이나 게시물이 있습니다.",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            },
                            {
                                "title": "개인 정보가 무단으로 사용된 것 같습니다.",
                                "description": "개인 정보가 무단으로 사용된 것 같습니다.",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            },
                            {
                                "title": "사이트에서 사기성 결제를 경험했습니다.",
                                "description": "사이트에서 사기성 결제를 경험했습니다.",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            }
                        ]
                    }
                }
            ],
            "quickReplies": [
              {
                "messageText": "처음으로",
                "action": "message",
                "label": "처음으로"
              },
              {
                "messageText": "다시 문의하기",
                "action": "message",
                "label": "다시 문의하기"
              }
            ]
        }
    }

    return jsonify(responseBody)

# ----------------------------------------------------------------------------------------------------
# 문의 및 신고하기 기능_step7_유준
@bp.route('/step7_complaint_report3', methods=['POST'])
def step1_complaint_report3():
    global step2_report2
    body = request.get_json()

    step2_report3 = body['userRequest']['utterance']
    print(f'step2_report3 : {step2_report3}')

    responseBody = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "listCard": {
                        "header": {
                            "title": "고객 서비스 관련"
                        },
                        "items": [
                            {
                                "title": "고객 서비스 응대가 불친절하거나 부적절했습니다.",
                                "description": "고객 서비스 응대가 불친절하거나 부적절했습니다.",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            }
                        ]
                    }
                }
            ],
            "quickReplies": [
              {
                "messageText": "처음으로",
                "action": "message",
                "label": "처음으로"
              },
              {
                "messageText": "다시 문의하기",
                "action": "message",
                "label": "다시 문의하기"
              }
            ]
        }
    }

    return jsonify(responseBody)

# ----------------------------------------------------------------------------------------------------
# 문의 및 신고하기 기능_step8_유준
@bp.route('/step8_complaint_report4', methods=['POST'])
def step1_complaint_report4():
    global step2_report3
    body = request.get_json()

    responseBody = {
        "version": "2.0",
        "template": {
            "outputs": [
                {
                    "listCard": {
                        "header": {
                            "title": "기술 및 기능 관련"
                        },
                        "items": [
                            {
                                "title": "사이트의 특정 기능이 제대로 작동하지 않습니다.",
                                "description": "사이트의 특정 기능이 제대로 작동하지 않습니다.",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            },
                            {
                                "title": "사이트에서 명예 훼손적인 내용을 발견했습니다.",
                                "description": "사이트에서 명예 훼손적인 내용을 발견했습니다.",
                                "link": {
                                    "web": "https://www.naver.com"
                                }
                            }
                        ]
                    }
                }
            ],
            "quickReplies": [
              {
                "messageText": "처음으로",
                "action": "message",
                "label": "처음으로"
              },
              {
                "messageText": "다시 문의하기",
                "action": "message",
                "label": "다시 문의하기"
              }
            ]
        }
    }

    return jsonify(responseBody)